#!/system/bin/sh

# we should only run once !
if [ -f "/data/.googlewiz.touch" ]; then exit 0; fi

LOGFILE=$1

BB=/system/xbin/busybox
CMD=/system/bin/cmd
PROP=/system/bin/getprop

CNT=0
while [ ! -d /sdcard/Android ]; do
    CNT=$(( $CNT + 1 ))
    sleep 1
    # abort if we slept more than 20 seconds
    if [ "$CNT" -eq 20 ]; then
        echo "-- something is terribly wrong(!), slept for > $CNT seconds waiting for /sdcard/Android" | tee -a $LOGFILE
        echo "<<< Settingsonce ended at $( date +"%Y%m%d - %H:%M:%S" )" | tee -a $LOGFILE
        exit 1
    fi
done
echo "-- slept for $CNT seconds waiting for /sdcard/Android" | tee -a $LOGFILE

fix_missing_file () {
    # fix logcat errors due to missing $1 file
    if [ ! -f "$1" ]; then
	      $BB touch "$1"
	      $BB chmod 600 "$1"
	      $BB chown system:system "$1"
        echo "-- fixed $1" | tee -a $LOGFILE
    else
        echo "-- $1 already exists (no action)" | tee -a $LOGFILE
    fi
}

fix_missing_file /data/system/users/0.xml
fix_missing_file /data/system/users/0/personalist.xml

if [ ! -d /system/odm ]; then
    echo "-- creating missing directory /system/odm" | tee -a $LOGFILE
    # root filesystem is ro mounted !
    $BB mount -o rw,remount /system
    # fix missing symlink in root filesystem
    $BB mkdir -p /system/odm
    $BB mount -o ro,remount /system
fi
if [ ! -d /data/user_de/0/com.android.shell/files/bugreports ]; then
    # fix missing symlink in root filesystem
    echo "-- creating missing directory /data/user_de/0/com.android.shell/files/bugreports" | tee -a $LOGFILE
    $BB mkdir -p /data/user_de/0/com.android.shell/files/bugreports
fi

echo "-- changing global settings" | tee -a $LOGFILE
$CMD settings put global Window_animation_scale 0
$CMD settings put global adb_enabled 1
$CMD settings put global animator_duration_scale 0
$CMD settings put global assisted_gps_enabled 1
$CMD settings put global audio_safe_volume_state 2
$CMD settings put global auto_time 1
$CMD settings put global auto_time_zone 1
$CMD settings put global brightness_auto 1
$CMD settings put global brightness_on_top 1
$CMD settings put global debug_app null
$CMD settings put global development_settings_enabled 1
$CMD settings put global device_idle_constants "inactive_to=60000,sensing_to=0,locating_to=0,locating_accuracy=10000,motion_inactive_to=0,idle_after_inactive_to=0,idle_pending_to=120000,max_idle_pending_to=120000,idle_pending_factor=2,idle_to=1800000,max_idle_to=21600000,idle_factor=2,min_time_to_alarm=3600000,max_temp_app_whitelist_duration=300000,mms_temp_app_whitelist_duration=60000,sms_temp_app_whitelist_duration=20000"

MODEL=`$PROP ro.boot.bootloader | /system/bin/toybox cut -c 1-4`
if [ "$MODEL" = "G950" ]; then
    DEVNAME='Galaxy S8'
else
    DEVNAME='Galaxy S8+'
fi
$CMD settings put global device_name "$DEVNAME"
echo "-- setting device name to '$DEVNAME'" | tee -a $LOGFILE

$CMD settings put global display_size_forced 1440,2960
$CMD settings put global heads_up_notifications_enabled 0
$CMD settings put global lockscreen_aod_servicebox_page servicebox_clock
$CMD settings put global mobile_data_always_on 0
$CMD settings put global navigationbar_force_touch_enable 0
$CMD settings put global netstats_enabled 0
$CMD settings put global online_manual_url 0
$CMD settings put global ota_disable_automatic_update 1
$CMD settings put global overlay_display_devices null
$CMD settings put global transition_animation_scale 0
$CMD settings put global wait_for_debugger 0
$CMD settings put global wifi_idle_ms 300000
$CMD settings put global wifi_networks_available_notification_on 0
$CMD settings put global wifi_scan_always_enabled 0
$CMD settings put global window_animation_scale 0

echo "-- changing secure settings" | tee -a $LOGFILE
$CMD settings put secure brightness_auto 1
$CMD settings put secure brightness_on_top 1
$CMD settings put secure default_display_density_forced 640
$CMD settings put secure default_display_size_forced 1440,2960
$CMD settings put secure development_settings_enabled 1
$CMD settings put secure dialer_default_application com.google.android.dialer
$CMD settings put secure disabled_print_services "com.android.bips/.BuiltInPrintService"
$CMD settings put secure display_density_forced 640
$CMD settings put secure first_enter_wifisetupwizard 1
$CMD settings put secure install_non_market_apps 1
$CMD settings put secure lock_screen_allow_private_notifications 1
$CMD settings put secure lock_screen_owner_info_enabled 0
$CMD settings put secure lock_screen_show_notifications 1
$CMD settings put secure notification_badging 0
$CMD settings put secure qs_tile_column 7
$CMD settings put secure qs_tile_layout 5
$CMD settings put secure screensaver_enabled 0
$CMD settings put secure sms_default_application com.google.android.apps.messaging
$CMD settings put secure sysui_qqs_count 7
$CMD settings put secure sysui_qs_tiles="wifi,bt,cell,location,nfc,flashlight,airplane,powersaving,night,dnd,read,hotspot,cast,saver,inversion,vpn,custom(com.google.android.apps.nbu.files/.quicksettings.StorageAssistantTileService)"
$CMD settings put secure tts_default_synth com.google.android.tts
$CMD settings put secure wifi_idle_ms 300000

echo "-- changing system settings" | tee -a $LOGFILE
$CMD settings put system access_control_enabled 0
$CMD settings put system adaptive_fast_charging 1
$CMD settings put system add_info_music_control 0
$CMD settings put system aod_show_state 0
$CMD settings put system device_visibility_enabled 0
$CMD settings put system dim_screen 1
$CMD settings put system direct_share 0
$CMD settings put system display_battery_percentage 1
$CMD settings put system easy_mode_switch 1
$CMD settings put system fingerprint_gesture_quick 1
$CMD settings put system fingerprint_guide_shown 0
$CMD settings put system haptic_feedback_enabled 1
$CMD settings put system hdr_effect 1
$CMD settings put system lock_application_shortcut "0;com.google.android.apps.messaging/com.google.android.apps.messaging.ui.ConversationListActivity;0;com.sec.android.app.camera/com.sec.android.app.camera.Camera;"
$CMD settings put system lockscreen_ripple_effect 0
$CMD settings put system lockscreen_sounds_enabled 1
$CMD settings put system motion_merged_mute_pause 0
$CMD settings put system motion_overturn 0
$CMD settings put system motion_pick_up 0
$CMD settings put system motion_pick_up_to_call_out 0
$CMD settings put system multi_window_enabled 0
$CMD settings put system nearby_scanning_enabled 0
$CMD settings put system people_stripe 0
$CMD settings put system samsung_pay 0
$CMD settings put system screen_mode_automatic_setting 0
$CMD settings put system screen_mode_setting 2
$CMD settings put system screen_off_pocket 1
$CMD settings put system sec_display_preset_index 2
$CMD settings put system sec_display_temperature_custom 0
$CMD settings put system send_security_reports 0
$CMD settings put system sip_key_feedback_sound 0
$CMD settings put system sip_key_feedback_vibration 0
$CMD settings put system support_split_sound 0
$CMD settings put system surface_palm_touch 0
$CMD settings put system transition_animation_scale 0
$CMD settings put system vibrate_when_ringing 1
$CMD settings put system window_animation_scale 0
$CMD settings put system wireless_fast_charging 1
$CMD settings put system screen_off_timeout 300000
$CMD settings put system screen_off_timeout_rollback 300000

# turn off NFC
echo "-- turn off NFC" | tee -a $LOGFILE
/system/bin/service call nfc 6 > /dev/null

# now make sure this script so it runs exactly once
echo "-- touch /data/.googlewiz.touch" | tee -a $LOGFILE
$BB touch /data/.googlewiz.touch

